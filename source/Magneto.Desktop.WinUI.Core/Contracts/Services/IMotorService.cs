using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Magneto.Desktop.WinUI.Core.Models.Motors;
using Magneto.Desktop.WinUI.Core.Models.Print;

namespace Magneto.Desktop.WinUI.Core.Contracts.Services;
public interface IMotorService
{
    void Initialize();
    void HandleStartUp();
    public CommandQueueManager GetCommandQueueManager();
    StepperMotor GetBuildMotor();
    StepperMotor GetPowderMotor();
    StepperMotor GetSweepMotor();
    double GetMaxSweepPosition();
    public Task<double> GetMotorPositionAsync(StepperMotor motor);
    public Task<double> GetMotorPositionAsync(string motorNameLowerCase);
    Task<double> GetBuildMotorPositionAsync();
    Task<double> GetPowderMotorPositionAsync();
    Task<double> GetSweepMotorPositionAsync();
    Task<(int res, double position)> HandleGetPositionAsync(string motorNameLowerCase);
    void ConfigurePortEventHandlers();
    void IntializeMotors();
    void HandleMotorInit(string motorNameLowerCase, StepperMotor motor, out StepperMotor motorField);
    void InitializeMotorMap();
    Task<int> MoveMotorAbs(string motorNameLowerCase, double target);
    Task<int> MoveBuildMotorAbs(double target);
    Task<int> MovePowderMotorAbs(double target);
    Task<int> MoveSweepMotorAbs(double target);
    Task<int> MoveMotorRel(string motorNameLowerCase, double distance);
    Task<int> MoveBuildMotorRel(double distance);
    Task<int> MovePowderMotorRel(double distance);
    Task<int> MoveSweepMotorRel(double distance);
    bool MotorsRunning();
    bool CheckMotorStopFlag(string motorNameLowerCase);
    void EnableBuildMotor();
    void EnablePowderMotor();
    void EnableSweepMotor();
    void EnableMotors();
    Task<int> StopMotorAndClearQueue(string motorNameLowerCase);
    Task<int> HomeMotor(StepperMotor motor);
    Task<int> HomeMotor(string motorNameLowerCase);
    Task<int> WaitUntilMotorHomedAsync(string motorNameLowerCase);
    Task<int> WaitUntilBuildReachesTargetAsync(double targetPos);
    Task<int> WaitUntilPowderReachesTargetAsync(double targetPos);
    Task<int> WaitUntilSweepReachesTargetAsync(double targetPos);
}
